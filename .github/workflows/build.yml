name: Build

on:
  workflow_dispatch: # lets you run a build from the UI
  push:

jobs:
  build_macos_app:
    runs-on: macos-12

    env:
      PROJECT_NAME: LightHost
      BUILD_TYPE: Release
      BUILD_DIR: Builds
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install macOS Deps
        run: brew install ninja osxutils

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true # Get JUCE populated

      - name: Set up Environment Variables
        shell: bash
        run: |
          VERSION_REGEX='^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$'
          if [[ $GITHUB_REF =~ $VERSION_REGEX ]]; then
              PROJECT_VERSION="${BASH_REMATCH[1]}"
          else
              PROJECT_VERSION="0.0.0.${GITHUB_RUN_NUMBER}"
          fi
          echo "PROJECT_VERSION=${PROJECT_VERSION}" >> $GITHUB_ENV

      - name: Configure
        shell: bash
        run: cmake -B ${{ env.BUILD_DIR }} -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE}} -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" .

      - name: Build
        shell: bash
        run: cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --parallel 4

      - name: Test
        working-directory: ${{ env.BUILD_DIR }}
        run: ctest --output-on-failure -j4

      - name: Pluginval
        working-directory: ${{ env.BUILD_DIR }}
        shell: bash
        run: |
          curl -LO "https://github.com/Tracktion/pluginval/releases/download/v1.0.3/pluginval_macOS.zip"
          unzip pluginval_macOS.zip
          pluginval.app/Contents/MacOS/pluginval --strictness-level 10 --verbose --validate "${{ env.VST3_PATH }}"

      - name: Package .app
        run: |
          mkdir -p packaging/app
          mv "${{ env.ARTIFACTS_PATH }}/VST3/${{ env.PROJECT_NAME }}.vst3" packaging/app
          mv "${{ env.ARTIFACTS_PATH }}/AU/${{ env.PROJECT_NAME }}.component" packaging/app
          mv "${{ env.BUILD_DIR }}/${{ env.PROJECT_NAME }}.app" packaging/app
          codesign -s "${{ secrets.DEVELOPER_ID_APPLICATION}}" --timestamp -i com.pamplejuce.pamplejuce --deep --force packaging/app/${{ env.PROJECT_NAME }}.app

      - name: Upload .app (MacOS)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJECT_NAME }}.app
          path: packaging/app/${{ env.PROJECT_NAME }}.app
